# Generated by Django 3.0.2 on 2020-04-06 22:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('doctor_id', models.CharField(default='JZlD4CeZO5', max_length=10, primary_key=True, serialize=False)),
                ('surname', models.CharField(max_length=50, null=True)),
                ('other_names', models.CharField(max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=6, null=True)),
                ('specialization', models.CharField(blank=True, max_length=25, null=True)),
                ('phone_number', models.BigIntegerField(default=0, null=True)),
                ('years_of_experience', models.IntegerField(default=0, null=True)),
                ('home_address', models.CharField(blank=True, max_length=300, null=True)),
                ('dob', models.CharField(blank=True, max_length=10, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=15, null=True)),
                ('next_of_kin', models.CharField(blank=True, max_length=30, null=True)),
                ('next_of_kin_addr', models.CharField(blank=True, max_length=30, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('owner', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Records',
            fields=[
                ('record_id', models.CharField(default='tqyh0u7od8', max_length=10, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('doctors_report', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Resolved', 'Resolved'), ('Recovering', 'Recovering'), ('New', 'New'), ('Critical', 'Critical')], max_length=15, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('doctor', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Doctor')),
                ('owner', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('patient_id', models.CharField(default='KvYsV0eyGz', max_length=10, primary_key=True, serialize=False)),
                ('surname', models.CharField(max_length=50, null=True)),
                ('other_names', models.CharField(max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=6, null=True)),
                ('phone_number', models.BigIntegerField(default=0, null=True)),
                ('weight', models.IntegerField(default=0, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A', 'A'), ('A+', 'A+'), ('B', 'B'), ('B+', 'B+'), ('AB', 'AB'), ('AB+', 'AB+'), ('O', 'O'), ('O+', 'O+')], max_length=3, null=True)),
                ('genotype', models.CharField(blank=True, max_length=5, null=True)),
                ('home_address', models.CharField(blank=True, max_length=300, null=True)),
                ('dob', models.CharField(blank=True, max_length=10, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=15, null=True)),
                ('next_of_kin', models.CharField(blank=True, max_length=30, null=True)),
                ('next_of_kin_addr', models.CharField(blank=True, max_length=30, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('owner', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.CharField(blank=True, choices=[('ADHD', 'ADHD'), ('Arthritis', 'Arthritis'), ('Asthma', 'Asthma'), ('Autism', 'Autism'), ('Birth Defects', 'Birth Defects'), ('Cancer', 'Cancer'), ('Cattarh', 'Cattarh'), ('Coughing', 'Coughing'), ('Diarrhoea', 'Diarrhoea'), ('Chlamydia', 'Chlamydia'), ('Chronic Obstructive Pulmonary Disease (COPD)', 'Chronic Obstructive Pulmonary Disease (COPD)'), ('Coronavirus Disease (COVID-19)', 'Coronavirus Disease (COVID-19)'), ('Diabetes', 'Diabetes'), ('Ebola (Ebola Virus Disease)', 'Ebola (Ebola Virus Disease)'), ('Epilepsy', 'Epilepsy'), ('Flu (Influenza)', 'Flu (Influenza)'), ('Genital Herpes (Herpes Simplex Virus)', 'Genital Herpes (Herpes Simplex Virus)'), ('Gonorrhea', 'Gonorrhea'), ('Heart Disease', 'Heart Disease'), ('Headache', 'Headache'), ('Hepatitis', 'Hepatitis'), ('HIV/AIDS', 'HIV/AIDS'), ('Kidney Disease (Chronic Kidney Disease)', 'Kidney Disease (Chronic Kidney Disease)'), ('Lassa Fever', 'Lassa Fever'), ('Meningitis', 'Meningitis'), ('Parasites – Scabies', 'Parasites – Scabies'), ('Salmonella', 'Salmonella'), ('Sexually Transmitted Diseases', 'Sexually Transmitted Diseases'), ('Surgical Operation', 'Surgical Operation'), ('Stroke', 'Stroke'), ('Traumatic Brain Injury (TBI)', 'Traumatic Brain Injury (TBI)'), ('Tuberculosis (TB)', 'Tuberculosis (TB)'), ('Typhoid', 'Typhoid'), ('Zika Virus', 'Zika Virus')], max_length=50, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('owner', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Records')),
            ],
        ),
    ]
